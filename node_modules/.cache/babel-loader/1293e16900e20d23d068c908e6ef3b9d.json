{"remainingRequest":"/Users/user/Desktop/okidokicasedev/node_modules/babel-loader/lib/index.js!/Users/user/Desktop/okidokicasedev/src/store/info.js","dependencies":[{"path":"/Users/user/Desktop/okidokicasedev/src/store/info.js","mtime":1621771705890},{"path":"/Users/user/Desktop/okidokicasedev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/okidokicasedev/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3VzZXIvRGVza3RvcC9va2lkb2tpY2FzZWRldi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvdXNlci9EZXNrdG9wL29raWRva2ljYXNlZGV2L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZS9hcHAiOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIGluZm86IHt9LAogICAgaW5mb1VzZXJzOiB7fQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRJbmZvOiBmdW5jdGlvbiBzZXRJbmZvKHN0YXRlLCBpbmZvKSB7CiAgICAgIHN0YXRlLmluZm8gPSBpbmZvOwogICAgfSwKICAgIGNsZWFySW5mbzogZnVuY3Rpb24gY2xlYXJJbmZvKHN0YXRlKSB7CiAgICAgIHN0YXRlLmluZm8gPSB7fTsKICAgIH0sCiAgICBzZXRJbmZvVXNlcnM6IGZ1bmN0aW9uIHNldEluZm9Vc2VycyhzdGF0ZSwgaW5mb1VzZXJzKSB7CiAgICAgIHN0YXRlLmluZm9Vc2VycyA9IGluZm9Vc2VyczsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHVwZGF0ZUluZm86IGZ1bmN0aW9uIHVwZGF0ZUluZm8oX3JlZiwgdG9VcGRhdGUpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNvbW1pdCwgZ2V0dGVycywgdWlkLCB1cGRhdGVEYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZi5jb21taXQsIGdldHRlcnMgPSBfcmVmLmdldHRlcnM7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCJnZXRVaWQiKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgdWlkID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHVwZGF0ZURhdGEgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGdldHRlcnMuaW5mbyksIHRvVXBkYXRlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCIvdXNlcnMvIi5jb25jYXQodWlkLCAiL2luZm8iKSkudXBkYXRlKHVwZGF0ZURhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBjb21taXQoInNldEluZm8iLCB1cGRhdGVEYXRhKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIHRocm93IF9jb250ZXh0LnQwOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCAxMV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hJbmZvOiBmdW5jdGlvbiBmZXRjaEluZm8oX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIHVpZCwgaW5mbzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCJnZXRVaWQiKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgdWlkID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoIi91c2Vycy8iLmNvbmNhdCh1aWQsICIvaW5mbyIpKS5vbmNlKCJ2YWx1ZSIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpbmZvID0gX2NvbnRleHQyLnNlbnQudmFsKCk7CiAgICAgICAgICAgICAgICBjb21taXQoInNldEluZm8iLCBpbmZvKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb21taXQoInNldEVycm9yIiwgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDIudDA7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoVXNlcnM6IGZ1bmN0aW9uIGZldGNoVXNlcnMoX3JlZjMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGluZm9Vc2VyczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCIvdXNlcnMiKS5vbmNlKCJ2YWx1ZSIpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBpbmZvVXNlcnMgPSBfY29udGV4dDMuc2VudC52YWwoKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBPYmplY3Qua2V5cyhpbmZvVXNlcnMpLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGluZm9Vc2Vyc1trZXldKSwge30sIHsKICAgICAgICAgICAgICAgICAgICBpZDoga2V5CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDMudDA7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMSwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBpbmZvOiBmdW5jdGlvbiBpbmZvKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pbmZvOwogICAgfSwKICAgIGluZm9Vc2VyczogZnVuY3Rpb24gaW5mb1VzZXJzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pbmZvVXNlcnM7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/user/Desktop/okidokicasedev/src/store/info.js"],"names":["firebase","state","info","infoUsers","mutations","setInfo","clearInfo","setInfoUsers","actions","updateInfo","toUpdate","dispatch","commit","getters","uid","updateData","database","ref","update","fetchInfo","once","val","console","log","fetchUsers","Object","keys","map","key","id"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nexport default {\n  state: {\n    info: {},\n    infoUsers: {},\n  },\n  mutations: {\n    setInfo(state, info) {\n      state.info = info;\n    },\n    clearInfo(state) {\n      state.info = {};\n    },\n    setInfoUsers(state, infoUsers) {\n      state.infoUsers = infoUsers;\n    },\n  },\n  actions: {\n    async updateInfo({ dispatch, commit, getters }, toUpdate) {\n      try {\n        const uid = await dispatch(\"getUid\");\n        const updateData = { ...getters.info, ...toUpdate };\n\n        await firebase.database().ref(`/users/${uid}/info`).update(updateData);\n        commit(\"setInfo\", updateData);\n      } catch (error) {\n        throw error;\n      }\n    },\n    async fetchInfo({ dispatch, commit }) {\n      try {\n        const uid = await dispatch(\"getUid\");\n        const info = (\n          await firebase.database().ref(`/users/${uid}/info`).once(\"value\")\n        ).val();\n        commit(\"setInfo\", info);\n      } catch (error) {\n        commit(\"setError\", error);\n        console.log(error);\n        throw error;\n      }\n    },\n    async fetchUsers({ dispatch, commit }) {\n      try {\n        const infoUsers = (\n          await firebase.database().ref(`/users`).once(\"value\")\n        ).val();\n        return Object.keys(infoUsers).map((key) => ({\n          ...infoUsers[key],\n          id: key,\n        }));\n      } catch (error) {\n        throw error;\n      }\n    },\n  },\n  getters: {\n    info(state) {\n      return state.info;\n    },\n    infoUsers(state) {\n      return state.infoUsers;\n    },\n  },\n};\n"]}]}